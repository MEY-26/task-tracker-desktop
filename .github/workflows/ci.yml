name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  frontend-tests:
    name: frontend-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build:ui

  code-quality:
    name: code-quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  backend-tests:
    name: backend-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          extensions: mbstring, tokenizer, sqlite3, pdo_sqlite
      - name: Install Composer deps
        working-directory: task-tracker-api
        run: composer install --no-interaction --prefer-dist
      - name: Prepare env
        working-directory: task-tracker-api
        run: |
          cp .env .env.testing || true
          php artisan key:generate --force
          mkdir -p database
          touch database/database.sqlite
      - name: Run tests
        working-directory: task-tracker-api
        run: php artisan test --no-ansi

  security-scan:
    name: security-scan
    runs-on: ubuntu-latest
    continue-on-error: true  # raporla ama pipeline'Ä± bloklama
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: npm audit (prod, high+)
        run: |
          npm audit --omit=dev --audit-level=high || true
      - name: Composer audit
        working-directory: task-tracker-api
        run: composer audit || true

  build-electron:
    name: build-electron
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    needs: [frontend-tests, backend-tests, code-quality]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build:ui
      - name: Build (dir only)
        run: npx electron-builder --dir
      - uses: actions/upload-artifact@v4
        with:
          name: electron-dir-${{ github.ref_name }}
          path: release/**

